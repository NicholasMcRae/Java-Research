Today
9:09 AM
Hey Arthur, which repo are your faxing changes in? And which did you fix the injection issue in?
Wouldn't mind taking a look at what you did
Arthur Tyndall
9:10 AM
https://git.lhsc.on.ca/ClinicalSolutions_Programming/appointment-notification-system
Let me know if you have any questions/feedback/criticism.
9:10 AM
Was the sql injection issue in the same repo?
Will do.. although I likely won't look too closely
Arthur Tyndall
9:11 AM
SQL injection issue was in Lab Turnaround Times
Arthur Tyndall
9:15 AM
https://git.lhsc.on.ca/ClinicalSolutions_Programming/LabTurnaroundTimes/-/merge_requests/4/diffs
Root cause was string concatenation of user input to create the SQL queries.
9:16 AM
Thanks. Looks like you did quite a bit with the appointment app, I didn't realize how long you'd been working on that.
Arthur Tyndall
9:17 AM
It was a complete re-write
The original code had a lot of problems
9:17 AM
Was it you who identified it needed a re-write?
Arthur Tyndall
9:18 AM
In conversation with Pam over time. We'd originally tried to just update the existing code.
9:18 AM
What would you say the main problems with it were?
9:19 AM
And yea, I think when some of these apps were originally developed they got done, but we didn't always use best practices. Dave Ramey was a pretty good developer, but I'm not sure if he even had formal training.
Arthur Tyndall
9:22 AM
The app was setup to queue several faxes and then check their status in a blocking loop until they succeeded or failed. That caused a lot of IO spam to the fax server and wasn't reliable.
The fax server is intended to just get all the faxes queued at once and then you can check statuses later.
The old code also opened a new DB connection for each fax it processed and didn't close them until the program finished...
9:23 AM
Gotcha, thanks .. how did you know the point about the fax server?
Arthur Tyndall
9:24 AM
Steve van der Burg
9:26 AM
Ah, thanks for the info. I'll have to spend a bit more time with your code.